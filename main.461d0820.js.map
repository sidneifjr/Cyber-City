{"version":3,"sources":["../scripts/components/Modal/modal.component.ts","../scripts/components/AddGridItem/addGridItem.component.ts","../scripts/components/Loader/loader.component.ts","../scripts/components/Glitch/glitch.component.ts","../scripts/components/GoTopBtn/goTopBtn.component.ts","../scripts/components/ShowMoreBtn/showMoreBtn.component.ts","../scripts/components/MenuHamburger/menuHamburger.component.ts","../scripts/main.ts"],"names":[],"mappings":"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","file":"main.461d0820.js","sourceRoot":"..\\frontend\\views","sourcesContent":["import { format } from \"path\";\r\n\r\n// Modal\r\nlet modal = (): void => {\r\n    let modalWrapper = document.querySelector('.modal-wrapper') as HTMLElement;\r\n    let modalOpenBtn = document.querySelector('.modalBtn') as HTMLElement;\r\n    let modalCloseBtn = modalWrapper.querySelector('.sub') as HTMLElement;\r\n    let modalForm = modalWrapper.querySelector('form') as HTMLElement;\r\n\r\n    if(modalOpenBtn){\r\n        modalOpenBtn.addEventListener(\"click\", (e): void => {\r\n            e.preventDefault();\r\n\r\n            if(modalWrapper){\r\n                modalWrapper.classList.add('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    if(modalCloseBtn){\r\n        modalCloseBtn.addEventListener(\"click\", (e): void => {\r\n            e.preventDefault();\r\n\r\n            if(modalWrapper){\r\n                modalWrapper.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    modalForm.addEventListener('submit', (e): void => {\r\n        let modalFormInputs = modalForm.querySelectorAll('input');\r\n\r\n        modalFormInputs.forEach((item) => {\r\n            if(!item.value){\r\n                console.log('submit cancelled!');\r\n                e.preventDefault();\r\n                // return false;\r\n            }\r\n\r\n            else {\r\n                modalWrapper.classList.remove('active');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport default modal();\r\n\r\n","/**\r\n * Criando um novo item para a grid, com classes.\r\n * 1 - Pegando os valores dos inputs para criar o novo item.\r\n * 2 - Usando os valores para criar uma classe.\r\n **/\r\nlet addGridItem = (): void => {\r\n    let gridWrapper = document.querySelector('.photo-grid-wrapper') as HTMLElement;\r\n    let modalForm = document.querySelector('.modal form') as HTMLElement;\r\n\r\n    if(modalForm){\r\n        let modalFormInputs = Array.from(modalForm.querySelectorAll('input'));\r\n\r\n        modalForm.addEventListener(\"submit\", (e): void => {\r\n            e.preventDefault();\r\n\r\n            function inputValues(inputs: any){\r\n                let nameValue = \"name\" as any;\r\n                let developerValue = \"developer\" as any;\r\n                let genreValue = \"genre\" as any;\r\n                let releaseDateValue = \"releaseDate\" as any;\r\n                let imageURL = \"image\" as any;\r\n\r\n                Array.from(inputs).forEach((item: any) => {\r\n                    let inputName = item.getAttribute(\"name\");\r\n\r\n                    if(inputName === nameValue){\r\n                        nameValue = item.value;\r\n                    }\r\n\r\n                    if(inputName === developerValue){\r\n                        developerValue = item.value;\r\n                    }\r\n\r\n                    if(inputName === genreValue){\r\n                        genreValue = item.value;\r\n                    }\r\n\r\n                    if(inputName === releaseDateValue){\r\n                        releaseDateValue = item.value;\r\n                    }\r\n\r\n                    if(inputName === imageURL){\r\n                        imageURL = item.value;\r\n                    }\r\n                });\r\n\r\n                return [nameValue, developerValue, genreValue, releaseDateValue, imageURL];\r\n            }\r\n\r\n            let returnedValues = inputValues(modalFormInputs);\r\n\r\n            class NewGameInfo {\r\n                name: string;\r\n                developer: string;\r\n                genre: string;\r\n                releaseDate: number;\r\n                imageURL: string;\r\n\r\n                constructor(name: string, developer: string, genre: string, releaseDate: number, imageURL: string){\r\n                    this.name = name;\r\n                    this.developer = developer;\r\n                    this.genre = genre;\r\n                    this.releaseDate = releaseDate;\r\n                    this.imageURL = imageURL;\r\n                }\r\n\r\n                // Criando o HTML do item\r\n                createGameItem(): void {\r\n                    console.log(`${this.name}, developed by ${this.developer} as an ${this.genre} title, was released in ${this.releaseDate}`);\r\n\r\n                    let grid = gridWrapper.querySelector('.photo-grid') as HTMLElement;\r\n                    let gameItem = document.createElement(\"DIV\");\r\n                    let gameItemImage = document.createElement(\"img\");\r\n                    let gameItemText = document.createElement(\"DIV\");\r\n                    let gameItemTextTitle = document.createElement(\"h4\") as any;\r\n                    let gameItemTextDescription = document.createElement(\"p\") as any;\r\n\r\n                    gameItem.setAttribute(\"class\", \"photo-grid-item\");\r\n                    gameItemImage.setAttribute(\"src\", `${this.imageURL}`);\r\n                    gameItemText.setAttribute(\"class\", \"photo-grid-item-info\");\r\n                    gameItemTextTitle.innerText = `${this.name}`;\r\n                    gameItemTextDescription.innerText = `${this.developer}`;\r\n\r\n                    gameItem.appendChild(gameItemImage);\r\n                    gameItemText.appendChild(gameItemTextTitle);\r\n                    gameItemText.appendChild(gameItemTextDescription);\r\n                    gameItem.appendChild(gameItemText);\r\n                    grid.appendChild(gameItem);\r\n                }\r\n            }\r\n\r\n            // Processando os dados retornados da função\r\n            function processedSubmitData() {\r\n                let newGame = new NewGameInfo(returnedValues[0], returnedValues[1], returnedValues[2], returnedValues[3], returnedValues[4]);\r\n                newGame.createGameItem();\r\n\r\n                returnedValues.forEach((item, index): void => {\r\n                    localStorage.setItem(`${\"item \" + index++}`, returnedValues[index]);\r\n                });\r\n\r\n                console.log(localStorage);\r\n            }\r\n\r\n            requestAnimationFrame(processedSubmitData);\r\n        });\r\n    }\r\n}\r\n\r\nexport default addGridItem();\r\n","// Loading\r\nlet loading = (): void => {\r\n    let loader = document.querySelector('.loader');\r\n\r\n    setTimeout((): void => {\r\n        if(loader){\r\n            loader.className += ' hidden';\r\n        }\r\n    }, 1500);\r\n}\r\n\r\nexport default loading();\r\n","// Glitch on item hover\r\nlet glitch = (): void => {\r\n    let glitchContainer = document.querySelector('.glitch') as HTMLElement;\r\n\r\n    if(glitchContainer){\r\n        let count = 10; // degree of corruption\r\n        let parentContainer = glitchContainer.parentElement as HTMLElement;\r\n        let ranOnce = false;\r\n\r\n        parentContainer.addEventListener('mouseenter', (): void => {\r\n            console.log(\"event fired!\");\r\n\r\n            if(!ranOnce){\r\n                for (let index = 0; index < count; index++){\r\n                    let glitchBox = document.createElement('div');\r\n                    glitchBox.setAttribute('class', 'box');\r\n                    glitchContainer.appendChild(glitchBox);\r\n                }\r\n\r\n                let glitch = document.getElementsByClassName('box');\r\n\r\n                // Object.assign?\r\n                setInterval((): void => {\r\n                    for (let index = 0; index < glitch.length; index++){\r\n                        let item = glitch[index] as HTMLElement;\r\n                        item.style.height = Math.floor(Math.random() * 100) + 'px';\r\n                        item.style.backgroundPosition = Math.floor(Math.random() * 50) + 'px';\r\n                        item.style.left = Math.floor(Math.random() * 100) + 'vw';\r\n                        item.style.top = Math.floor(Math.random() * 100) + 'vh';\r\n                        item.style.width = Math.floor(Math.random() * 400) + 'px';\r\n                    }\r\n                }, 600);\r\n            }\r\n\r\n            ranOnce = true;\r\n        });\r\n    }\r\n}\r\n\r\n// export default glitch();\r\n","// Go To Top Button\r\nlet goTopBtn = (): void => {\r\n    let gridWrapper = document.querySelector('.photo-grid-wrapper') as HTMLElement;\r\n    let goTop = document.querySelector('.goTop') as HTMLElement;\r\n\r\n    if(goTop){\r\n        goTop.addEventListener(\"click\", (e): void => {\r\n            e.preventDefault();\r\n            gridWrapper.scrollTop = 0;\r\n        });\r\n    }\r\n}\r\n\r\nexport default goTopBtn();\r\n","// Show button after scroll\r\nlet showMoreBtn = (): void => {\r\n    let gridWrapper = document.querySelector('.photo-grid-wrapper') as HTMLElement;\r\n\r\n    if(gridWrapper){\r\n        let showMorebtn = document.querySelector('.show-more') as HTMLElement;\r\n\r\n        gridWrapper.addEventListener(\"scroll\", (): void => {\r\n            let distanceScrolled = gridWrapper.scrollTop as Number;\r\n\r\n            if(distanceScrolled >= 200){\r\n                showMorebtn.classList.add(\"visible\");\r\n            }\r\n\r\n            else {\r\n                showMorebtn.classList.remove(\"visible\");\r\n            }\r\n        });\r\n\r\n        showMorebtn.addEventListener('click', (e): void => {\r\n            e.preventDefault();\r\n            console.log('showing more items...');\r\n        });\r\n    }\r\n}\r\n\r\nexport default showMoreBtn();\r\n","// Menu Hamburguer\r\nlet menuHamburger = (): void => {\r\n    let hamburguerBtn = document.querySelector('.hamburger') as HTMLElement;\r\n\r\n    hamburguerBtn.addEventListener('click', function(){\r\n        let body = document.querySelector('body') as HTMLElement;\r\n\r\n        if(hamburguerBtn.classList.contains('is-active')){\r\n            hamburguerBtn.classList.remove('is-active');\r\n            body.classList.remove('fullSize');\r\n        }\r\n\r\n        else {\r\n            hamburguerBtn.classList.add('is-active');\r\n            body.classList.add('fullSize');\r\n        }\r\n    });\r\n}\r\n\r\nexport default menuHamburger();\r\n","import modal from './components/Modal/modal.component';\r\nimport addGridItem from './components/AddGridItem/addGridItem.component';\r\nimport loader from './components/Loader/loader.component';\r\nimport glitch from './components/Glitch/glitch.component';\r\nimport goTopBtn from './components/GoTopBtn/goTopBtn.component';\r\nimport showMoreBtn from './components/ShowMoreBtn/showMoreBtn.component';\r\nimport menuHamburger from './components/MenuHamburger/menuHamburger.component';\r\n\r\nmodal;\r\naddGridItem;\r\nloader;\r\nglitch;\r\ngoTopBtn;\r\nshowMoreBtn;\r\nmenuHamburger;\r\n\r\n// Minimize sidemenu\r\n// let fullSize = (): void => {\r\n//     let sideMenu = document.getElementById('header') as HTMLElement;\r\n// }\r\n// fullSize();\r\n\r\n// Mutation Observer\r\n// var postLikesParent = document.querySelector('.lista--elogios');\r\n// console.log(postLikesParent);\r\n\r\n// var observer = new MutationObserver(function(mutations){\r\n//   mutations.forEach(function(mutation){\r\n//     if(mutation.addedNodes.length){\r\n//       console.log('Added', mutation.addedNodes[0]);\r\n//       console.log(mutation.addedNodes[1]);\r\n\r\n//       var postLikes = Array.from(postLikesParent.querySelectorAll('.post .likes'));\r\n//       console.log(postLikes);\r\n\r\n//       $(postLikes).click(function(){\r\n//         $(this).toggleClass('active');\r\n//       });\r\n//     }\r\n\r\n//     if(mutation.removedNodes.length){\r\n//       console.log('Removed', mutation.removedNodes[0]);\r\n//     }\r\n//   });\r\n// });\r\n\r\n// observer.observe(postLikesParent, {\r\n//   childList: true,\r\n// });\r\n"]}